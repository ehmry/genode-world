assert_spec linux

set build_components {
	core init
	drivers/timer drivers/nic
	app/http_editor
	server/ram_fs
	lib/vfs/lwip
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

set config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>
	<start name="nic_drv">
		<binary name="linux_nic_drv"/>
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Nic"/> </provides>
	</start>

	<start name="ram_fs">
		<resource name="RAM" quantum="4M"/>
		<provides> <service name="File_system"/> </provides>
		<config>
			<content>
				<rom name="init.config"/>
			</content>
			<default-policy writeable="yes" root="/"/>
		</config>
		<route>
			<service name="ROM" label="init.config">
				<parent label="config"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="http_editor">
		<resource name="RAM" quantum="32M"/>
		<config ld_verbose="yes">
			<vfs>
				<fs/>
				<dir name="dev">
					<log/>
					<dir name="socket">
						<lwip ip_addr="10.0.2.55" netmask="255.255.255.0" gateway="10.0.2.1" nameserver="8.8.8.8"/>
					</dir>
				</dir>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log" socket="/dev/socket"/>
		</config>
	</start>
}

append_platform_drv_config

append config {
</config>
}

install_config $config

set boot_modules {
	core init timer linux_nic_drv
	ld.lib.so libc.lib.so libm.lib.so
	libc_resolv.lib.so stdcxx.lib.so libc_pipe.lib.so
	vfs_lwip.lib.so
	ram_fs
	http_editor
}

append_platform_drv_boot_modules

build_boot_image $boot_modules

run_genode_until forever

# vi: set ft=tcl :
